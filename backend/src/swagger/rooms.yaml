paths:
  /rooms:
    get:
      tags:
        - Rooms
      summary: Get all rooms
      description: Retrieve a list of all rooms with optional filtering
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Page number
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: Number of items per page
        - in: query
          name: type
          schema:
            type: string
            enum: [single, double, suite, deluxe]
          description: Filter by room type
        - in: query
          name: status
          schema:
            type: string
            enum: [available, occupied, maintenance, reserved]
          description: Filter by room status
        - in: query
          name: minPrice
          schema:
            type: number
          description: Minimum price filter
        - in: query
          name: maxPrice
          schema:
            type: number
          description: Maximum price filter
        - in: query
          name: floor
          schema:
            type: integer
          description: Filter by floor number
      responses:
        200:
          description: Rooms retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      rooms:
                        type: array
                        items:
                          $ref: '#/components/schemas/Room'
                      pagination:
                        type: object
                        properties:
                          total:
                            type: integer
                            example: 50
                          page:
                            type: integer
                            example: 1
                          pages:
                            type: integer
                            example: 5
                          limit:
                            type: integer
                            example: 10
        500:
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      tags:
        - Rooms
      summary: Create a new room
      description: Add a new room to the system (Admin/Staff only)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - roomNumber
                - type
                - floor
                - price
                - maxOccupancy
              properties:
                roomNumber:
                  type: string
                  example: '101'
                type:
                  type: string
                  enum: [single, double, suite, deluxe]
                  example: double
                floor:
                  type: integer
                  example: 1
                price:
                  type: number
                  example: 150.00
                status:
                  type: string
                  enum: [available, occupied, maintenance, reserved]
                  default: available
                  example: available
                amenities:
                  type: array
                  items:
                    type: string
                  example: [WiFi, TV, Mini Bar]
                maxOccupancy:
                  type: integer
                  example: 2
                description:
                  type: string
                  example: Spacious room with ocean view
                images:
                  type: array
                  items:
                    type: string
                  example: [room1.jpg, room2.jpg]
      responses:
        201:
          description: Room created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Room created successfully
                  data:
                    $ref: '#/components/schemas/Room'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden - Admin/Staff access required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /rooms/available:
    get:
      tags:
        - Rooms
      summary: Get available rooms
      description: Retrieve all available rooms for a date range
      parameters:
        - in: query
          name: checkIn
          required: true
          schema:
            type: string
            format: date
          description: Check-in date
          example: '2024-12-20'
        - in: query
          name: checkOut
          required: true
          schema:
            type: string
            format: date
          description: Check-out date
          example: '2024-12-25'
        - in: query
          name: guests
          schema:
            type: integer
            default: 1
          description: Number of guests
        - in: query
          name: type
          schema:
            type: string
            enum: [single, double, suite, deluxe]
          description: Filter by room type
      responses:
        200:
          description: Available rooms retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Room'
        400:
          description: Bad request - Invalid dates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /rooms/{id}:
    get:
      tags:
        - Rooms
      summary: Get room by ID
      description: Retrieve a specific room by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Room ID
          example: 507f1f77bcf86cd799439011
      responses:
        200:
          description: Room retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Room'
        404:
          description: Room not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      tags:
        - Rooms
      summary: Update room
      description: Update a specific room by ID (Admin/Staff only)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Room ID
          example: 507f1f77bcf86cd799439011
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roomNumber:
                  type: string
                  example: '101'
                type:
                  type: string
                  enum: [single, double, suite, deluxe]
                  example: double
                floor:
                  type: integer
                  example: 1
                price:
                  type: number
                  example: 150.00
                status:
                  type: string
                  enum: [available, occupied, maintenance, reserved]
                  example: available
                amenities:
                  type: array
                  items:
                    type: string
                  example: [WiFi, TV, Mini Bar]
                maxOccupancy:
                  type: integer
                  example: 2
                description:
                  type: string
                  example: Spacious room with ocean view
                images:
                  type: array
                  items:
                    type: string
                  example: [room1.jpg, room2.jpg]
      responses:
        200:
          description: Room updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Room updated successfully
                  data:
                    $ref: '#/components/schemas/Room'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden - Admin/Staff access required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Room not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      tags:
        - Rooms
      summary: Delete room
      description: Delete a specific room by ID (Admin only)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Room ID
          example: 507f1f77bcf86cd799439011
      responses:
        200:
          description: Room deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Room deleted successfully
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden - Admin access required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Room not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'