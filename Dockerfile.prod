# Production Dockerfile for ZedUno Frontend
# Multi-stage build for optimal image size

# Build stage
FROM node:20-alpine AS builder

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci --only=development

# Copy source code
COPY . .

# Build the frontend application
RUN npm run build:frontend

# Production stage
FROM nginx:alpine

# Install additional tools
RUN apk add --no-cache \
    curl \
    certbot \
    certbot-nginx \
    tzdata

# Set timezone
ENV TZ=UTC

# Remove default nginx config
RUN rm /etc/nginx/conf.d/default.conf

# Copy custom nginx configuration
COPY nginx/nginx.conf /etc/nginx/nginx.conf

# Copy built application from builder stage
COPY --from=builder /app/dist /usr/share/nginx/html

# Create nginx user and set permissions
RUN chown -R nginx:nginx /usr/share/nginx/html && \
    chmod -R 755 /usr/share/nginx/html

# Create directories for SSL certificates
RUN mkdir -p /etc/letsencrypt/live && \
    mkdir -p /var/www/certbot

# Copy the default configuration template
COPY nginx/templates /etc/nginx/templates

# Expose ports
EXPOSE 80 443

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost/ || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]