version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7
    container_name: zeduno-mongodb-prod
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
      MONGO_INITDB_DATABASE: zeduno
    ports:
      - "127.0.0.1:27017:27017"  # Bind to localhost only for security
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
      - ./mongo-init:/docker-entrypoint-initdb.d:ro
    networks:
      - zeduno-network
    command: mongod --auth
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: zeduno-backend-prod
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:${MONGODB_PASSWORD}@mongodb:27017/zeduno?authSource=admin
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRE: ${JWT_EXPIRE:-7d}
      CORS_ORIGIN: ${CORS_ORIGIN}
      BACKEND_URL: ${BACKEND_URL}
      RATE_LIMIT_WINDOW_MS: ${RATE_LIMIT_WINDOW_MS:-900000}
      RATE_LIMIT_MAX_REQUESTS: ${RATE_LIMIT_MAX_REQUESTS:-100}
      # Payment Gateway Settings
      MPESA_ENVIRONMENT: ${MPESA_ENVIRONMENT:-sandbox}
      STRIPE_PUBLISHABLE_KEY: ${STRIPE_PUBLISHABLE_KEY:-}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY:-}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET:-}
      SQUARE_APPLICATION_ID: ${SQUARE_APPLICATION_ID:-}
      SQUARE_ACCESS_TOKEN: ${SQUARE_ACCESS_TOKEN:-}
    ports:
      - "127.0.0.1:5000:5000"  # Bind to localhost only
    depends_on:
      mongodb:
        condition: service_healthy
    volumes:
      - backend_uploads:/app/uploads
      - backend_logs:/app/logs
    networks:
      - zeduno-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Frontend & Nginx Reverse Proxy
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: zeduno-frontend-prod
    restart: unless-stopped
    environment:
      NGINX_HOST: ${DOMAIN:-localhost}
      SSL_CERT_PATH: ${SSL_CERT_PATH:-/etc/nginx/ssl/cert.pem}
      SSL_KEY_PATH: ${SSL_KEY_PATH:-/etc/nginx/ssl/key.pem}
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      # SSL certificates
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/www/certbot:/var/www/certbot:ro
      # Nginx configuration
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      # Upload files (shared with backend)
      - backend_uploads:/app/uploads:ro
    networks:
      - zeduno-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # MongoDB Express (Optional - for database management)
  mongo-express:
    image: mongo-express:latest
    container_name: zeduno-mongo-express-prod
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGODB_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://admin:${MONGODB_PASSWORD}@mongodb:27017/
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_USER:-admin}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_PASSWORD}
      ME_CONFIG_OPTIONS_EDITORTHEME: ambiance
    ports:
      - "127.0.0.1:8081:8081"  # Accessible only from localhost
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - zeduno-network
    profiles:
      - debug  # Only start with --profile debug

  # Redis Cache (Optional - for session management and caching)
  redis:
    image: redis:7-alpine
    container_name: zeduno-redis-prod
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - zeduno-network
    profiles:
      - cache
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

# Persistent volumes
volumes:
  mongodb_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/zeduno/data/mongodb
  mongodb_config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/zeduno/data/mongodb-config
  backend_uploads:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/zeduno/uploads
  backend_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/zeduno/logs
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/zeduno/data/redis

# Network configuration
networks:
  zeduno-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16