version: '3.8'

services:
  mongodb:
    image: mongo:7
    container_name: hotelzed-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: hotelzed
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - hotelzed-network

  mongo-express:
    image: mongo-express:latest
    container_name: hotelzed-mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb:27017/
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    ports:
      - "8081:8081"
    depends_on:
      - mongodb
    networks:
      - hotelzed-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: hotelzed-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/hotelzed?authSource=admin
      JWT_SECRET: your-secret-key-here
      CORS_ORIGIN: http://localhost
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
    networks:
      - hotelzed-network

  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hotelzed-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - hotelzed-network

volumes:
  mongodb_data:

networks:
  hotelzed-network:
    driver: bridge